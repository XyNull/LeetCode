import java.util.LinkedList;
import java.util.Queue;

public class TreeNodeHelper {
	public static void main(String[] args){
		int[] a = {2,1,3,-1,7,9,1,2,0,1,-1,0,0,8,8,0,0,0,0,7};
		TreeNode b = treeBuilder(a);
		TreeNode c = new TreeNode(0);
		c.left = b;
	}
	
	public static TreeNode treeBuilder(int[] n){
    	if(n.length == 0)
			return null;
    	
    	TreeNode root = new TreeNode(n[0]);
    	Queue<TreeNode> curLv = new LinkedList<TreeNode>();
    	Queue<TreeNode> nextLv = new LinkedList<TreeNode>();
    	curLv.add(root);
    	int num = 1,lv = 1,cu = 1,ne = 0;
    	
    	//levels traversal
      	while(num < n.length){
      		
      		//new all the nodes at next level and push them into queue
    		for(int i = 0; i < 1<<lv; i++){
    			if(num > n.length-1) break;
    			nextLv.add(new TreeNode(n[num++]));
    			ne++;
    		}
    		
    		//connect each nodes from this level to new nodes from queue
    		while(cu > 0){
    			TreeNode cur = curLv.poll();
    			cu--;
    			TreeNode left = nextLv.poll();
    			TreeNode right = nextLv.poll();
    			if(cur != null){
    				cur.left = left;
        			cur.right = right;
    			}
    			curLv.add(left);
    			curLv.add(right);
    			ne += 2;
    		}
    		cu = ne;
    		ne = 0;
    	}
    	
    	return root;
	}
}
